openapi: 3.0.0

info:
  description: OpenAPI specification for the customers service
  version: 1.0.0
  title: Customers service OpenAPI contract

servers:
  - url: https://api.example.com/customers

paths:
  /:
    post:
      operationId: customers_controller.add_customer
      tags:
        - Customers
      requestBody:
        $ref: '#/components/requestBodies/CreateCustomer'
      responses:
        201:
          description: Returns the new customer
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/CustomerProperties'
                  - $ref: '#/components/schemas/CustomerRequiredProperties'
        409:
          description: A customer with ID {customer_id} already exists
    put:
      operationId: customers_controller.update_customer
      tags:
        - Customers
      summary: Updates an existing customer based on the received data
      parameters:
        - $ref: '#/components/parameters/customer_id'
      responses:
        204:
          description: Returns updated customer
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/CustomerProperties'
                  - $ref: '#/components/schemas/CustomerRequiredProperties'
        404:
          description: Customer with ID {customer_id} not found
  /{customer_id}:
    get:
      operationId: customers_controller.get_customer
      tags:
        - Customers
      summary: Fetches a customer
      parameters:
        - $ref: '#/components/parameters/customer_id'
      responses:
        200:
          description: Returns existing customer
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/CustomerProperties'
                  - $ref: '#/components/schemas/CustomerRequiredProperties'
        404: 
          description: Customer with ID {customer_id} not found
    delete:
      operationId: customers_controller.delete_customer
      tags:
        - Customers
      summary: Deletes a customer
      parameters:
        - $ref: '#/components/parameters/customer_id'
      responses:
        202:
          description: Customer deleted successfully
        404:
          description: Customer with ID {customer_id} not found
   
components:
  parameters:
    customer_id:
      name: customer_id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/id'
  requestBodies:
    CreateCustomer:
      description: Create a new customer
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/CustomerProperties'
              - $ref: '#/components/schemas/CustomerRequiredProperties'
  schemas:
    CustomerProperties:
      type: object
      properties:
        customer_id:
          $ref: '#/components/schemas/id'
        name:
          type: string
        email:
          type: string
        phone:
          type: integer
          format: int32
        billing_address:
          type: string
        shipping_address:
          type: string
        credit_standing:
          type: number
          format: float
    CustomerRequiredProperties:
      type: object
      required:
        - customer_id
        - name
        - billing_address
        - shipping_address
        - credit_standing
    id:
      type: integer
      format: int32
